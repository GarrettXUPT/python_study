由于不同机器上的程序之间要进行通信，所以才产生了网络。

sever：服务端 只有在使用的时候进行运行
client：客户端 需要一直运行 等待服务调用

CS架构：C/S即：Client与Server ，中文意思：客户端与服务器端架构，这种架构也是从用户层面（也可以是物理层面）来划分的

BS架构：B/S即：Browser与Server,中文意思：浏览器端与服务器端架构，这种架构是从用户层面来划分的。Browser浏览器，
其实也是一种Client客户端，只是这个客户端不需要大家去安装什么应用程序，只需在浏览器上通过HTTP请求服务器端相关的资源
（网页资源），客户端Browser浏览器就能进行增删改查。

BS架构之所以流行的主要原因就是：做到了统一入口

手机端的BS架构还没有流行开来，但是像微信中的小程序和公众号已经是统一入口的雏形了
将大量的功能统一到同一个入口，这种开发思想叫做解耦分支思想，可以大大提高开发效率

BS架构与CS架构的关系：BS架构其实是CS架构的一种，只不过将客户端换为浏览器

想要实现通信，必须得有网线和网卡，网卡上有一个全球唯一的mac地址

IP地址：
编码 字节
编号
四个点分十进制
四个八位二进制数：00000000.00000000.00000000.00000000
0.0.0.0——255.255.255.255为ip地址
通过ip地址就可以找到mac地址 遵循arp协议
规定网络地址的协议叫ip协议，它定义的地址称之为ip地址，广泛采用的v4版本即ipv4，它规定网络地址由32位2进制表示

最近出现的ipv6 0.0.0.0.0.0——255.255.255.255.255.255

交换机是用来解决多台机器之间的通信问题 基于交换机的连接方式是一种比较落后的通信链接方式

网关：局域网中的机器要去访问局域网外的机器需要经过网关访问
如何判断两台机器是否在同一个局域网中，要通过子网掩码与IP地址按位与

255.255.255.0       11111111.11111111.11111111.00000000
193.168.13.253      11000000 10101000 00001101 11111101
193 168 13 0        11000000 10101000 00001101 00000000
按位与的结果是局域网的网段，前三位是局域网的网段地址

判断实例：
比如，已知IP地址172.16.10.1和172.16.10.2的子网掩码都是255.255.255.0，请问它们是否在同一个子网络？
两者与子网掩码分别进行AND运算，

172.16.10.1：10101100.00010000.00001010.000000001
255255.255.255.0:11111111.11111111.11111111.00000000
AND运算得网络地址结果：10101100.00010000.00001010.000000001->172.16.10.0



172.16.10.2：10101100.00010000.00001010.00000010
255255.255.255.0:11111111.11111111.11111111.00000000
AND运算得网络地址结果：10101100.00010000.00001010.000000001->172.16.10.0
结果都是172.16.10.0，因此它们在同一个子网络。
IP地址的功能：总结一下，IP协议的作用主要有两个，一个是为每一台计算机分配IP地址，另一个是确定哪些地址在同一个子网络。


光有IP地址只能找到需要通信的机器而不能找到具体通信的应用，如要找到需要通信的应用，还需要端口
在计算机上 每一个需要网络通信的程序，都会开一个端口，在同一时间只能有一个程序占用端口，不可能在同一时间，
在同一计算机上，有多个程序占用同一个端口，端口的范围是从0——65535，一般使用8000之后的端口，因为前段有很多系统需要的端口

有ip地址就可以确定唯一的一台机器，端口可以确定唯一的一个程序 IP+端口 就可以找到唯一机器上的唯一的应用
127.0.0.1 本地的回环地址，表示本机器的地址，若使用该地址，则为同一台机器上的程序在进行相互通信

TCP协议和UDP协议

TCP协议：通过三次握手客户端与服务端建立通信，即客户端向服务端请求建立通信，服务端同意与客户端建立通信并同时向客户端请求建立
通信，客户端收到后，发送同意建立通信信息给服务端。进行互相通信后，进行四次挥手断开通信，首先一端向另一端发起断开通信通知，
另一端接到该通知后，先发送同意断开连接给发送端，然后也向另一端发送断开连接通知，另一端接收到通知后，发送同意给另一端，断开连接。

UDP协议：当应用程序希望通过UDP与一个应用程序通信时，传输数据之前源端和终端不建立连接。当它想传送时就简单地去抓取来自
应用程序的数据，并尽可能快地把它扔到网络上。

TCP与UDP的区别：
TCP---传输控制协议（长连接）,提供的是面向连接、可靠的字节流服务。当客户和服务器彼此交换数据前，必须先在双方之间
建立一个TCP连接，之后才能传输数据。TCP提供超时重发，丢弃重复数据，检验数据，流量控制等功能，保证数据能从一端传到另一端。
UDP---用户数据报协议（无连接），是一个简单的面向数据报的运输层协议。UDP不提供可靠性，它只是把应用程序传给IP层的数据报发送出去，
但是并不能保证它们能到达目的地。由于UDP在传输数据报前不用在客户和服务器之间建立一个连接，且没有超时重发等机制，
故而传输速度很快。
