今日主要内容
    1、生成器
        本质就是迭代器
        一个一个的创建对象
        创建生成器的方式：
            1、生成器函数
            2、通过生成器表达式来获取生成器
    2、各种生成函数（重点）
        生成器含糊中包含yield，作用是返回数据和return差不多
        return会马上中断该函数的执行，yield可以分段的执行一个函数

        生成器函数在执行的时候，会马上返回生成器函数，而不是执行此函数
        生成器可以向下执行的两个条件：
            1、__next__，执行到下一个yield
            2、send()，给yield传值

        所有的生成器都是迭代器，都可以执行for循环，都可以使用list来获取生成器内所有的数据

        生成器中记录的是代码而不是函数的运行
        def func():
            print("你要干嘛")
            yield "我怎么知道"
        grn = func() # 该处创建生成器，此时运行会把生成器函数中的代码记录在内存
        当执行到__next__时，会运行此空间中的代码，运行到yield结束

        优点：
        节省内存，因为生成器本身存储的就是代码，几乎不占用内存
        特点：惰性机制，只能向前，不能反复


    3、各种推导式
    4、生成器表达式（重点）