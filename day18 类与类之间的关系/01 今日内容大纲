今日主要内容：
    类与类之间的关系：
        在我们的世界中，事物与事物的发展总会有联系，在面向对象中，类与类之间也可以产生相关的关系

        1、依赖关系
            在执行某个动作的时候，需要xxx来帮助来完成这个操作，此时的关系是最轻。
            随时可以更换另外的东西来完成此操作
            在方法的参数位置把另一个类的对象作为参数进行传递

        2、关联关系-》组合-》聚合
            在对象中埋对象
            self.属性 = 对象
            self.phone = iphone

            self.phone.play()
            1、一对一关系
                self.grilfriend = gril
            2、一对多关系
                一个学校，一堆老师
                self.teach_list = []

            3、多对多关系

           类与类之间的关系，依赖关系是最轻的，最重的是继承关系，关联关系比较微妙
           self 到底是谁？
            self：谁调用的就是谁，类型是根据调用房的对象来进行变换的

        3、继承
            此种关系是最紧密的，可以节省代码
            父类：基类、超类
            子类：派生类
            在存在多种继承的时候，一定要区分self是谁？ 谁调用的就是谁

        特殊成员：在特殊的语境下，这些特殊成员会被自动执行
            __init__() 创建的时候初始化对象
            __call__() 对象[]
            __getitem__() 对象[哈哈]
            __setitem__() 对象[哈哈] = 值
            __new__() 创建对象的时候，开辟新内存
            __delitem__ 删除对象
            __hash__ 可哈希.hash()
            __enter__ with 对象的时候会进行调用
            __exit__ with 对象结束的时候进行调用

