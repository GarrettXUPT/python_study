缓冲区：每台电脑的缓冲器大小不一致，作用是将程序网络解耦
    输入缓冲区：
    输出缓冲区：

subprocess：执行系统指令

粘包现象：主要是因为接收端不知道消息的界限，不知道一次性提取多少字节数据造成的。
        接收时，数据大小固定位1024 而不是根据发送的大小进行接收

    粘包现象不一定会出现
    1、连续的小包，可能会被优化算法组合到一起进行发送

    2、第一次发送的数据2000B，接收端一次接受大小为1024B，会导致剩下的内容会被下一次recv接收到
        导致结果错乱。

        方案一：由于双方不知道对方发送数据的长度，导致接收时会导致接受不全，或者多接收了另外一次发送的信息内容，
                所以，在发送真实数据之前，要发送数据长度给接收端，接收端根据长度来接收其后的真实数据，但是双方
                有一个交互确认的过程

        方案二：通过struct模块
                打包：struct.pack('i', 长度)
                解包：struct.unpack('i', 字节)

        打印进度条：