网络编程：

CS架构：client/server 架构
BS架构：浏览器/服务端架构

网络通信流程：作为了解

OSI七层：应用层，表示层，会话层，传输层，网络层，数据链路层，物理层
        传输层中的TCP和UDP是重点
        TCP：
            三次握手：1、客户端向服务端发送链接请求，服务端发送同意链接请求，客户端发送同意
            四次挥手：首先一端向另一端发起断开通信通知，另一端接到该通知后，先发送同意断开连接
                     给发送端，然后也向另一端发送断开连接通知，另一端接收到通知后，发送同意给另一端，断开连接。
        UDP：
            当应用程序希望通过UDP与一个应用程序通信时，传输数据之前源端和终端不建立连接。当它想传送时就简单地去抓取来自
            应用程序的数据，并尽可能快地把它扔到网络上。

        TCP与UDP的区别：
            TCP：面向连接，消息可靠，发送的数据格式是面向字节流的
            UDP：面向无连接，消息不可靠，但传输速度快，发送的数据格式是面向包的

socket（重点）：TCP协议下的socket（重点）
               UDP协议下的socket（了解）

缓冲区（了解）

粘包现象（重点）

stucket（重点）

socketserver（重点）

并发编程：

多道技术（重点）
    空间复用：将多个进程放入内存，不再是只放一个
    时间复用：在进程IO阻塞时间利用起来，遇到IO自动运行别的进程

    并发：伪并行，多个程序看起来同时运行，其实是多个程序之间互相切换所导致的，步骤为：保存状态+程序切换
    并行：真正的程序同时运行，应用多核技术

    进程的三种状态：就绪、运行、阻塞

    异步非阻塞：多个任务同时运行，没有阻塞

    Process的使用、For循环创建进程、join、锁、队列、进程池都是重点，生产者消费者模型（绘描述）进程解耦